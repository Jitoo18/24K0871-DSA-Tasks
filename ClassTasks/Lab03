#include <iostream>
#include <string>
using namespace std;

struct Node
{
    string data;
    Node *next;
};

class LinkedList
{
public:
    Node *head;
    LinkedList()
    {
        head = nullptr;
    }

    void insertAtFront(string data)
    {
        Node *newNode = new Node;
        newNode->data = data;
        newNode->next = head;
        head = newNode;
    }

    void insertAtEnd(string data)
    {
        Node *newNode = new Node;
        newNode->data = data;
        newNode->next = nullptr;
        if (head == nullptr)
        {
            head = newNode;
            return;
        }
        Node *temp = head;
        while (temp->next != nullptr)
        {
            temp = temp->next;
        }
        temp->next = newNode;
    }

    void insertAfter(string prevData, string data)
    {
        Node *temp = head;
        while (temp != nullptr)
        {
            if (temp->data == prevData)
            {
                Node *newNode = new Node;
                newNode->data = data;
                newNode->next = temp->next;
                temp->next = newNode;
                return;
            }
            temp = temp->next;
        }
        cout << "Book '" << prevData << "' not found in the list." << endl;
    }

    bool search(string data)
    {
        Node *temp = head;
        while (temp != nullptr)
        {
            if (temp->data == data)
            {
                return true;
            }
            temp = temp->next;
        }
        return false;
    }

    void display()
    {
        Node *temp = head;
        while (temp != nullptr)
        {
            cout << temp->data;
            if (temp->next != nullptr)
            {
                cout << " -> ";
            }
            temp = temp->next;
        }
        cout << endl;
    }
};

int main()
{
    LinkedList list;
    list.insertAtEnd("Data Structures");
    list.insertAtEnd("Operating Systems");
    list.insertAtEnd("Computer Networks");
    list.insertAtEnd("Database Systems");

    list.insertAtFront("Artificial Intelligence");
    list.insertAtEnd("Machine Learning");
    list.insertAfter("Operating Systems", "Cyber Security");

    bool found = list.search("Database Systems");
    cout << "Book 'Database Systems' found: " << (found ? "true" : "false") << endl;

    list.display();

    return 0;
}
