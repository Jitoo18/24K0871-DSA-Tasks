#include <iostream>
using namespace std;

#define N 7

bool solveMaze(int maze[N][N], int solution[N][N], int x, int y) {
    if (x == N - 1 && y == N - 1 && maze[x][y] == 1) {
        solution[x][y] = 1;
        return true;
    }
    
    if (x >= 0 && x < N && y >= 0 && y < N && maze[x][y] == 1) {
        if (solution[x][y] == 1) return false;
        
        solution[x][y] = 1;
        
        if (solveMaze(maze, solution, x + 1, y)) return true;
        if (solveMaze(maze, solution, x, y + 1)) return true;
        if (solveMaze(maze, solution, x - 1, y)) return true;
        if (solveMaze(maze, solution, x, y - 1)) return true;
        
        solution[x][y] = 0;
        return false;
    }
    return false;
}

int main() {
    int maze[N][N];
    
    cout << "Enter the 7x7 maze (0 for obstacle, 1 for open path):" << endl;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cin >> maze[i][j];
        }
    }
    
    int solution[N][N] = {0};
    
    if (solveMaze(maze, solution, 0, 0)) {
        cout << "\n\nSolution path:" << endl;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                cout << solution[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "No solution exists" << endl;
    }
    
    return 0;
}
