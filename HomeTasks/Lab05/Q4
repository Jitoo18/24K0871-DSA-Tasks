#include <iostream>
using namespace std;

int solutions = 0;

bool isSafe(char board[][10], int row, int col, int n) {
    for (int i = 0; i < row; i++) {
        if (board[i][col] == 'Q') return false;
    }
    
    for (int i = row - 1, j = col - 1; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j] == 'Q') return false;
    }
    
    for (int i = row - 1, j = col + 1; i >= 0 && j < n; i--, j++) {
        if (board[i][j] == 'Q') return false;
    }
    
    return true;
}

void solveNQueens(char board[][10], int row, int n) {
    if (row == n) {
        if (solutions == 0) {
            cout << "One valid solution:" << endl;
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    cout << board[i][j] << " ";
                }
                cout << endl;
            }
        }
        solutions++;
        return;
    }
    
    for (int col = 0; col < n; col++) {
        if (isSafe(board, row, col, n)) {
            board[row][col] = 'Q';
            solveNQueens(board, row + 1, n);
            board[row][col] = '.';
        }
    }
}

int main() {
    int n;
    cout << "Enter the value of N: ";
    cin >> n;
    
    char board[10][10];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            board[i][j] = '.';
        }
    }
    
    solutions = 0;
    solveNQueens(board, 0, n);
    
    cout << "Total distinct solutions: " << solutions << endl;
    
    return 0;
}
