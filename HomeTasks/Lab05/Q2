#include <iostream>
using namespace std;

bool solveMaze(int** maze, int** solution, int x, int y, int N) {
    if (x == N - 1 && y == N - 1 && maze[x][y] == 1) {
        solution[x][y] = 1;
        return true;
    }
    
    if (x >= 0 && x < N && y >= 0 && y < N && maze[x][y] == 1) {
        if (solution[x][y] == 1) return false;
        
        solution[x][y] = 1;
        
        if (solveMaze(maze, solution, x + 1, y, N)) return true;
        if (solveMaze(maze, solution, x, y + 1, N)) return true;
        if (solveMaze(maze, solution, x - 1, y, N)) return true;
        if (solveMaze(maze, solution, x, y - 1, N)) return true;
        
        solution[x][y] = 0;
        return false;
    }
    return false;
}

int main() {
    int N;
    cout << "Enter the size of maze: ";
    cin >> N;
    
    int** maze = new int*[N];
    int** solution = new int*[N];
    
    for (int i = 0; i < N; i++) {
        maze[i] = new int[N];
        solution[i] = new int[N];
        for (int j = 0; j < N; j++) {
            solution[i][j] = 0;
        }
    }
    
    cout << "Enter the maze (" << N << "x" << N << "):" << endl;
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            cin >> maze[i][j];
        }
    }
    
    if (solveMaze(maze, solution, 0, 0, N)) {
        cout << "Solution path:" << endl;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                cout << solution[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "No solution exists" << endl;
    }
    
    for (int i = 0; i < N; i++) {
        delete[] maze[i];
        delete[] solution[i];
    }
    delete[] maze;
    delete[] solution;
    
    return 0;
}
